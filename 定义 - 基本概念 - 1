#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//数据：是能输入计算机且能被计算机处理的各种符号的集合，包括：数值型的数据（整数）、非数值型的数据（文字、图像）

//数据元素：数据元素是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理
//          也简称为元素，或称为记录、结点和顶点，一个数据元素可由若干个数据项组成

//数据项：构成数据元素的不可分割的最小单位

//数据对象：是性质相同的数据元素的集合，是数据的一个子集

//数据结构：数据元素不是孤立存在的，它们之间存在着某种关系，数据元素相互之间的关系成为结构
//          是指相互之间存在一种或多种特定关系的数据元素集合，或者说，数据结构是带结构的数据元素的集合

//          数据元素之间的逻辑关系，称为逻辑结构
//          数据元素及其关系在计算机内存中的表示（即映像），称为数据的物理结构或数据的存储结构
//          数据的运算和实现，即对数据元素可以世家的操作以及这些操作在相应的存储结构上的实现

//逻辑结构：描述数据元素之间的逻辑关系；与数据的存储无关，独立于计算机；是从具体问题抽象出来的数学模型
//物理结构：数据元素及其关系在计算机存储器中的结构（存储方式），是数据结构在计算机中的表示
//逻辑结构与物理结构（存储结构）的关系：存储结构是逻辑关系的映像与元素本身的映像
//                                      逻辑结构是数据结构的抽象，存储结构是数据结构的实现

//逻辑结构种类：1.线性结构：有且仅有一个开始和一个终端结点，并且所有结点都最多只有一个直接前驱和一个直接后继
//                    例如：线性表、栈、队列、串
//              2.非线性结构：一个结点可能有多个直接前驱和直接后继
//                      例如：树、图
//              3.四类基本逻辑结构：集合结构、线性结构（一对一）、树形结构（一对多）、图状结构（多对多）

//存储结构的种类：
//四种基本的存储结构：顺序存储结构：用一组连续的存储单元依次存储数据结构，数据元素之间的逻辑关系由元素的存储位置来表示
//                                  C语言用数组来实现 顺序存储结构
//                    链式存储结构：用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系用指针来表示
//                                  C语言中用指针来实现链式存储结构
//                    索引存储结构：在存储结点信息的同时，还建立附加的索引表
//                                  索引表中的每一项称为一个索引项
//                                  索引项的一般形式是：关键字，地址
//                                  关键字是能唯一标识一个结点的那些数据项
//                                  若每个结点在索引表中都有一个索引项，则该索引表称之为稠密索引。
//                                  若一组结点在索引表中只对应一个索引项，则该索引表称之为稀疏索引
//                    散列存储结构：根据界定啊的关键字直接计算出该结点的存储地址

int main()
{

	return 0;
}
