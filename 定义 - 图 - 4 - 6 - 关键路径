//关键路径：把工程计划表示为边表示活动的网络。即AOE网，用顶点表示事件，弧表示活动，
//          弧的权表示活动持续时间，事件表示在它之前的活动已经完成，在它之后的活动可以开始

//源点：入度为0的顶点
//汇点：出度为0的顶点
//关键路径：路径长度最长的路径
//路径长度：路径上各活动持续时间之和

//确定关键路径，需要定义四个描述量
//ve(vj) --- 表示事件 vj 的最早发生时间（源点最早发生时间为 0）
//vl(vj) --- 表示事件 vj 的最迟发生时间（要保证在规定时间内汇点结束）
//e(i)   --- 表示活动 ai 的最早开始时间
//l(i)   --- 表示活动 ai 的最迟发生时间
//l(i) - e(i) --- 表示完成活动 ai 的时间余量
//关键活动 --- 关键路径上的活动，即 l(i) == e(i)（即l(i) - e(i) == 0）的活动

//找 l(i) == e(i) 的关键活动
//设活动 ai 用弧 <j,k> 表示，其持续时间记为：w(j,k)
//则有：1.e(i) = ve(i)
//      2.l(i) = vl(k) - w(j,k)
//注意：此处 i == j

//求 ve(j)
//从 ve(1) = 0 开始向前递推，ve(j) = Max{ ve(i) + w(i,j) }，<i,j>属于T，2 <= j <= n
//其中 T 是所有以 j 为头的弧的集合
//即为 上一个顶点的最早发生时间 + 活动持续时间 的最大值（可能有多个顶点）

//求 vl(j)
//从 vl(n) = ve(n) 开始向后递推
//vl(i) = Min{ vl(j) - w(i,j) }，<i,j>属于 S，1 <= i <= n-1
//其中 S 是所有以 i 为尾的弧的集合
//即为 后一个顶点的最迟发生时间 - 活动持续时间 的最小值

//求关键路径步骤：1.求 ve(i)、vl(j)
//                2.求 e(i)、l(i)
//                3.计算 l(i) - e(i)

//讨论：1.若网中有几条关键路径，则需加快同时在几条关键路径上的关键活动
//        （一个事件（顶点）连接多条关键路径）
//      2.如果一个活动处于所有的关键路径上，那么提高这个活动的速度，就能缩短整个工程的完成时间
//        （到达所有关键路径都 需要通过这个活动）
//      3.处于所有关键路径上的活动完成时间不能缩短太多，否则会使原来的关键路径变成非关键路径
//        这时，必须重新寻找关键路径
