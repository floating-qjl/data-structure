#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>


//数和二叉树

//线性结构：一对一
//树形结构：一对 n
//图形结构：m 对 n

//树形结构：结点之间有分支，具有层次结构
//树的定义：树是n(n>=0)个结点的有限集，若n=0，称为空树；若n>0，则它满足以下两个条件：
//          1.有且仅有一个特定的称为根的结点     
//          2.其余结点可分为m(m>=0)个互不相交的有限集T1，T1 ，……，Tn，其中每一个集合本身又是一棵树，并称为根的子树

//总结：树是n个结点的有限集，显然，树的定义是一个递归的定义

//树的基本术语
//根结点：非空树中无前驱结点的结点
//结点的度：结点拥有的子树的数量
//树的度：树内各结点的度的最大值
//当一个子树的度为 0 时，称其为终端结点（叶子结点）
//当一个子树的度不为 0 时，称其为 非终端结点（分支结点），根结点 以外的分支节点称为 内部结点
//结点的子树的根称为该结点的孩子，该结点称为孩子的双亲
//如果有一些结点拥有共同的双亲，称他们为 兄弟
//如果有一些结点的双亲在同一层，且不相同，则称他们为堂兄弟
//结点的祖先：从根到该结点所经分支上的所有结点
//结点的子孙：以某结点为根的子树中的任意结点
//树的深度（高度）：树中结点的最大层次
//有序树：树中结点的各子树从左至右有次序（最左边的为第一个孩子）
//无序树：树中结点的各子树无次序
//森林：是 m(m>=0) 棵互不相交的树的集合
//      若将一棵树的根结点删除，则树就变成了森林
//因此，一棵树可以看作是一个特殊的森林，给森林中的各子树加上一个双亲结点，森林就变成了树
//树 一定是 森林，森林 不一定是 树


//线性结构                                                       树结构
//第一个数据元素（无前驱）                                       根结点（只有一个） 无双亲
//最后一个数据元素（无后继）                                     叶子结点（可有多个） 无孩子
//其他数据元素（一个前驱，一个后继）                             其它结点-中间结点（一个双亲，多个孩子）
//一对一    
