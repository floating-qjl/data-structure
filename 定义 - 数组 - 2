//数组的顺序存储

//一维数组
//有数组定义：int a[5]
//每个元素占用1字节，假设a[0]存储在2000单元，a[3]的地址是2012，即为 2000+3*4

//二维数组
//存储单元是一维结构，而数组是个多维结构，则用一组连续存储单元存放数组的数据元素就有个次序约定问题

//假设数组 a[3][3] ={1,2,3,4,5,6,7,8,9} 
//                    1 , 2 , 3
//                    4 , 5 , 6  
//                    7 , 8 , 9
//存储：1.行优先：即一行一行的存储
//                第二行跟在第一行后面
//          存储：1,2,3,4,5,6,7,8,9
//          a[i][j]的存储位置为：LOC(0,0)+(n*i+j)*L （在a[i][j]前所有元素个数 * 字节数）
//      2.列优先：即一列一列的存储
//                第二列跟在第一列后面
//          存储：1,4,7,2,5,8,3,6,9
//一般为行优先的顺序存储


//三维数组：按 页、行、列 存放，页优先的顺序存储
//a[m1][m2][m3]各维数组个数为 m1,m2,m3
//下标为i1，i2，i3的数组元素的存储位置：
//LOC(i1,i2,i3) = a  +              i1*m2*m3  +               i2*m3  +             i3
//                              前i1页总元素个数  第i1页前i2行总元素个数  第i2行前i3列元素个数


//推广：n维数组
//各维元素个数为 m1,m2,m3,……,m(n)
//下标为i1i2,i3,i4,……,i(n)的数组元素储存位置：
//LOC(i1,i2,……,i(n)) = a + i1*m2*m3*……*m(n) + i2*m3*m4*……*m(n) + …… + i(n-1)*m(n) + i(n)
//      
