//图的存储结构
//邻接表：有向图---缺点：求结点的度困难---十字链表
//        无向图---缺点：每条边都要存储两遍，操作不方便---邻接多重表

//十字链表是有向图的另一种链式存储结构，我们也可以把它看成是将有向图的邻接表和逆邻接表结合起来形成的一种链表
//有向图中的每一条弧对应十字链表中的一个弧结点，同时有向图中的每个顶点在十字链表中对应有一个结点，称为顶点结点

//十字链表：顶点结点多出一个指针域，为 data firstin（指向入度的弧结点） sirstout
//          弧结点：tailvex headvex hlink tlink

//邻接多重表：顶点结点不变，边结点有五个域，（第一个边结点的）第一个域与顶点相连
//            二、四个域为顶点下标，第三个域被上一个边结点指向，第五个域为其他顶点因重复边结点而指向
//即为：mark               ivex              ilink          jvex                 jlink
//标记此边是否被搜索过             指向依附ivex的下一条边                指向依附jvex的下一条边 
