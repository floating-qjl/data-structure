//广义表
//广义表是 n>=0 个元素的有限序列，其中每一个 ai 可以是原子，也可以是一个广义表
//即构成 原线性表 的一个 数据元素 又构成一个 小的 线性表，这种拓宽了的 线性表 就是广义表

//广义表通常记作：LS=(a1,a2,a3,a4,……,an)
//其中，LS为表名，n为表的长度，每一个 ai 为表的元素，习惯上，一般大写字母表示广义表，小写字母表示原子
//表头：若 LS 非空(n>=1)，则其第一个元素 ai 就是表头，记作 head(LS) = a1，注：表头可以是原子，也可以是子表
//表尾：除表头之外的其它元素组成的表，记作 tail(LS) = (a2,…,an)，注：表尾不是最后一个元素，而是一个子表

//例：A = （）                                                 空表，长度为0
//    B = （（））                                             长度为1，表头表尾均为（）
//    C = （a，（b，c））                                      长度为2，由原子 a 和子表（b，c）构成
//                                                             表头为a，表尾为（（b，c））
//    D = （x，y，z）                                          长度为3，每一项都是原子
//                                                             表头是x，表尾是（y，z）
//    E = （C，D）                                             长度为2，每一项都是子表
//    共享广义表                                               表头为C，表尾为（D）
//    F = （a，F）                                             长度为2，第一项为原子，第二项为他本身
//    递归广义表                                               表头是a，表尾为（F）
//                                                             F = （a，（a，（a，…）））

//广义表的性质：1.广义表中的数据元素有相对次序，一个直接前驱和一个直接后继
//              2.广义表的长度定义为最外层所包含元素的个数
//              3.广义表的深度定义为该广义表展开后所含括号的重数
//              例：A = （b，c）深度为1，B = （A，d）深度为2，C = （f，B，h）深度为3，原子深度为0，空表深度为1
//              4.广义表可以为其他广义表共享（广义表嵌套广义表）
//              5.广义表可以是一个递归的表（递归表的深度是无穷值，长度是有限的）
//              6.广义表是多层次结构，广义表的元素可以是单元素，也可以是子表，而子表的元素还可以是子表，……

//
//广义表可以看成是线性表的推广，线性表是广义表的特例
//广义表的结构相当灵活，在某种前提下，他可以兼容线性表、数组、树和有向图等各种常用的数据结构
//当二维数组的每行（或每列）作为子表处理时，二维数组即是一个广义表
//另外，数和有向图也可以用广义表来表示
//由于广义表中不仅集中了多种数据结构，而且可以有效地利用存储空间，因此在计算机中有许多应用领域都有成功使用广义表的实例
//
//广义表的基本运算：1.求表头：非空广义表的第一个元素，可以是一个原子，也可以是一个子表
//                  2.求表尾：非空广义表除去表头元素以外其他元素所构成的表，表尾一定是一个表
//
