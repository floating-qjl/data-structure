//图的逻辑结构：多对多
//图没有顺序存储结构，但可以借助二维数组来表示元素间的关系，用 邻接矩阵
//链式存储结构：多重链表很难实现，因此使用 邻接表、邻接多重表、十字链表

//数组（邻接矩阵）表示法
//建立一个顶点表（记录各个顶点信息）和一个邻接矩阵（表示各个顶点之间关系）
//图的邻接矩阵是一个二维数组 A.arcs[n][n]，定义为：
//如果<i,j>属于E 或者 (i,j)属于E，则A.arcs[i][j]=1，否则 A.arcs[i][j]=0
//无向图：两个顶点之间有边即为 1，无边即为 0
//特点：对角线上都为 0，二维数组的值关于对角线对称
//      顶点 i 的度 = 第 i 行（列）中 1 的个数
//特别：完全图的邻接矩阵中，对角元素为 0，其余为 1

//有向图的邻接矩阵表示法
//以 vi 为中心，若存在指向 vj 的弧，则 vj 的元素为 1，否则为 0
//第 i 行含义：以结点 vi 为尾的弧（即出度边）
//第 i 列含义：以结点 vi 为头的弧（即入度边）
//特点：有向图的邻接矩阵可能是不对称的
//      顶点的出度 = 第 i 行元素之和
//      顶点的入度 = 第 i 列元素之和
//      顶点的度 = 第 i 行元素之和 + 第 i 列元素之和


//网（有权图）的邻接矩阵表示法
//定义：若<vi,vj>或(vi,vj)属于VR，则A.arcs[i][j] = W(ij)（权值），
//      否则（无边或弧）则 A.arcs[i][j] = 无穷大
