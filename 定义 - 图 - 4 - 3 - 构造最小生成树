
//构造最小生成树

//方法一：普里姆算法
//算法思想：设 N=（V，E）是连通网，TE 使 N 上最小生成树中边的集合
//          初始令 U={u0}，（u0属于V），TE={}
//          在所有 u 属于U，v属于 V-U 的边（u，v）属于E中，找一条代价最小的边（u0，v0）
//          将（u0，v0）并入集合 TE，同时 v0 并入 U
//          重复上述操作直至 U=V 为止，则 T=（V，TE）为 N 的最小生成树


//方法二：克鲁斯卡尔算法
//算法思想：设连通网 N =（V，E），令最小生成树初始状态为只有 n 个顶点而无边的非连通图
//          T =（V，{}），每个顶点自成一个连通分量
//          在 E 中选取代价最小的边，若该边依附的顶点落在 T 中不同的连通分量上（即：不能形成环）
//          则将此边加入到 T 中，否则，舍去此边，选取下一条代价最小的边
//          依此类推，直到 T 中所有顶点都在同一连通分量上


//两种算法比较：普里姆算法                     克鲁斯卡尔算法
//               选择点                            选择边
//           O(n^2)（n为顶点数）             O(e*log(e))（e为边数）
//               稠密图                            稀疏图


