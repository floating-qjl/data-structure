//各种排序方法的综合比较
//时间性能：1.按平均时间性能来分，为 O(nlog(n))
//                                快速排序、堆排序、归并排序，其中以快速排序最好
//                                为 O(n^2)
//                                直接插入排序、冒泡排序、简单选择排序，其中以直接插入为最好
//                                为 O(n)
//                                基数排序

//          2.当待排序记录序列按关键字顺序有序时，直接插入排序和冒泡排序能达到O(n)的
//            时间复杂度；而对于快速排序而言，这是最不好的情况，此时的时间性能退化为
//            O(n^2)，因此是应该尽量避免的情况
//          3.简单选择排序、堆排序、归并排序的时间性能不随记录序列中关键字的分布而改变


//空间性能：指的是排序过程中所需的辅助空间大小
//          1.所有的简单排序方法（直接插入、冒泡、简单选择）和堆排序的空间复杂度为O(1)
//          2.快速排序为O(log(n))，为栈所需的辅助空间
//          3.归并排序所需辅助空间最多，其空间复杂度为O(n)
//          4.链式基数排序需附设队列首尾指针，则空间复杂度为O(rd)


//排序方法的稳定性能：稳定的排序方法指的是，对于两个关键字相等的记录，它们在序列中的
//                    相对位置，在排序之前和经过排序之后，没有改变
//                    当对多关键字的记录序列进行LSD方法排序时，必须采用稳定的排序方法
//                    对于不稳定的排序方法，只要能举出一个实例说明即可
//                    快速排序和堆排序是不稳定的排序方法


//排序方法的时间复杂度下限：除基数排序外，其他方法都是基于“比较关键字”进行排序的
//                          排序方法，可以证明，这类排序法可能达到的最快的时间复杂度
//                          为 O(nlog(n))
//基数排序不是基于“比较关键字”的排序方法，所以它不受这个限制
//可以用一棵判定树来描述这类基于“比较关键字”进行排序的排序方法
