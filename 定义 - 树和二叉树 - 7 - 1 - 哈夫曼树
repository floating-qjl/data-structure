#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>

//哈夫曼树及其应用

//判断树：用于描述分类过程的二叉树
//如果每次的输入量很大，则应考虑程序的操作时间
//而同样的判断，将操作顺序更改，就有不同的结果
//因此就有哈夫曼树，寻找最优效率的解法

//哈夫曼树基本概念
//路径：从树中一个结点到另一个结点之间的分支构成这两个结点间的路径
//结点的路径长度：两结点之间路径上的分支数
//树的路径长度：从树根到每一个结点的路径长度之和，记作：TL
//结点数目相同的二叉树中，完全二叉树是路径长度最短的二叉树
//但路径长度最短的二叉树，不一定是完全二叉树

//权：将树中结点但赋给一个有着某种含义的数值，则这个数值称为该结点的权
//结点的带权路径长度：从根结点到该结点之间的路径长度与该结点的权的乘积 
//树的带权路径长度：树中所有叶子结点的带权路径长度之和

//哈夫曼树：最优树（带权路径长度最短的树）
//注：“带权路径长度最短”是在“度相同”的树中比较而得到的结果，因此有最优二叉树、最优三叉树之称等等

//因此，哈夫曼树也为：最优二叉树（带权路径长度最短的二叉树）
//满二叉树不一定是哈夫曼树，哈夫曼树中权越大的叶子离根越近，具有相同带权结点的哈夫曼树不唯一
